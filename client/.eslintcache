[{"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/index.js":"1","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/serviceWorkerRegistration.js":"2","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/App.js":"3","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/utils/GlobalContext.js":"4","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Login.jsx":"5","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Homepage.jsx":"6","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/SignupModal/SignupModal.jsx":"7","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/LoginModal/LoginModal.jsx":"8","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/index.js":"9","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripMenu/TripMenu.jsx":"10","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Calendar/Calendar.jsx":"11","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripModal/TripModal.jsx":"12","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/EventModal/EventModal.jsx":"13","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/Navbar.jsx":"14"},{"size":646,"mtime":1610161251865,"results":"15","hashOfConfig":"16"},{"size":5064,"mtime":1610077746583,"results":"17","hashOfConfig":"16"},{"size":753,"mtime":1610077746579,"results":"18","hashOfConfig":"16"},{"size":621,"mtime":1610077769106,"results":"19","hashOfConfig":"16"},{"size":401,"mtime":1610077746582,"results":"20","hashOfConfig":"16"},{"size":777,"mtime":1610077746582,"results":"21","hashOfConfig":"16"},{"size":7946,"mtime":1610077746581,"results":"22","hashOfConfig":"16"},{"size":2907,"mtime":1610160324822,"results":"23","hashOfConfig":"16"},{"size":35,"mtime":1607802771801,"results":"24","hashOfConfig":"16"},{"size":2576,"mtime":1610224906627,"results":"25","hashOfConfig":"16"},{"size":6663,"mtime":1610224908380,"results":"26","hashOfConfig":"16"},{"size":8374,"mtime":1609990517891,"results":"27","hashOfConfig":"16"},{"size":10293,"mtime":1610224368651,"results":"28","hashOfConfig":"16"},{"size":842,"mtime":1610077746581,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"z5xaa6",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/index.js",[],["62","63"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/serviceWorkerRegistration.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/App.js",["64","65"],"import React, { Component, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport GlobalProvider from './utils/GlobalContext.js';\nimport Homepage from './pages/Homepage';\nimport Login from './pages/Login.jsx';\nimport Navbar from './components/Navbar';\nimport $ from \"jquery\";\n\nconst App = () => {\n\n  useEffect(() => {\n    $(document).foundation();\n  });\n\n  return (\n    <Router>\n      <GlobalProvider>\n        <Navbar />\n        <div className=\"App\">\n          <Switch>\n            <Route exact path='/' component={Homepage} />\n            <Route exact path='/login' component={Login} />\n          </Switch>\n        </div>\n      </GlobalProvider>\n    </Router >\n  );\n}\n\nexport default App;\n","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/utils/GlobalContext.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Login.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Homepage.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/SignupModal/SignupModal.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/LoginModal/LoginModal.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/index.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripMenu/TripMenu.jsx",["66","67","68","69"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Calendar/Calendar.jsx",["70","71","72"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripModal/TripModal.jsx",["73"],"import React, { Component } from 'react';\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport { TimePicker } from 'antd';\nimport moment from 'moment';\nimport 'antd/dist/antd.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass EventModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            // eventType: \"\",\n            location: \"\",\n            departureDate: \"\",\n            departureTime: \"\",\n            // returnDate: \"\",\n            // returnTime: \"\",\n        };\n\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        },\n        overlay: { zIndex: 1000 }\n    };\n\n    handleOpenModal() {\n        this.setState({ showModal: true });\n    }\n\n    handleCloseModal() {\n        this.setState({ showModal: false });\n    }\n\n    handleChange(event) {\n        console.log(event)\n        this.setState({ eventType: event.target.value });\n        console.log(this.state.eventType)\n    }\n\n    handleSubmit(event) {\n        console.log(this.state.location, this.state.departureDate, this.state.returnDate);\n        event.preventDefault();\n        var tripData = {\n            location: this.state.location,\n            startDate: this.state.departureDate,\n            endDate: this.state.returnDate,\n        };\n\n        // if (!tripData.email || !tripData.password) {\n        //     return;\n        // }\n\n        this.logTrip(tripData.location, tripData.startDate, tripData.endDate);\n        this.handleCloseModal();\n    };\n\n    logTrip = (location, startDate, endDate) => {\n        axios.post(\"/api/traveler/add-trip\", {\n            user: localStorage.getItem(\"user\"),\n            location: location,\n            startDate: startDate,\n            endDate: endDate\n        })\n            .then(function () {\n                console.log(\"success\");\n                // window.location.replace(\"/\");\n                // If there's an error, log the error\n            })\n            .catch(function (err) {\n                console.log(err);\n            });\n    };\n\n    render() {\n        return (\n            <div>\n                <button class=\"trip-button button\" onClick={this.handleOpenModal}>Add Trip</button>\n                <Modal\n                    isOpen={this.state.showModal}\n                    contentLabel=\"onRequestClose Example\"\n                    onRequestClose={this.handleCloseModal}\n                    shouldCloseOnOverlayClick={false}\n                    style={this.customStyles}\n                    ariaHideApp={false}\n                >\n                    <button onClick={this.handleCloseModal}>X</button>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Where are you going?\n                            <input onChange={e => this.setState({ location: e.target.value })} type=\"text\" name=\"tripLocation\" />\n                        </label>\n                        <div>\n                            Departure:\n                            <DatePicker\n                                selected={this.state.departureDate}\n                                onChange={date => this.setState({ departureDate: date })}\n                                shouldCloseOnSelect=\"true\"\n                            />\n                        </div>\n                        <div>\n                            Return:\n                            <DatePicker\n                                selected={this.state.returnDate}\n                                onChange={date => this.setState({ returnDate: date })}\n                                shouldCloseOnSelect=\"true\"\n                            />\n                        </div>\n                        {this.state.eventType === \"flight\" &&\n                            <div>\n                                <label>\n                                    Flight Number:\n                                <input type=\"text\" name=\"flightNum\" />\n                                </label>\n                                <div>\n                                    Departure:\n                                    <DatePicker\n                                        selected={this.state.departureDate}\n                                        onChange={date => this.setState({ departureDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ departureTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n                                <div>\n                                    Return:\n                                    <DatePicker\n                                        selected={this.state.returnDate}\n                                        onChange={date => this.setState({ returnDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ returnTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n                                <label>\n                                    Additional Info:\n                                <input type=\"text\" name=\"additionalInfoFlight\" />\n                                </label>\n                            </div>\n                        }\n                        {this.state.eventType === \"drive\" &&\n                            <div>\n                                <div>\n                                    Departure:\n                                    <DatePicker\n                                        selected={this.state.departureDate}\n                                        onChange={date => this.setState({ departureDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ departureTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n                                <div>\n                                    Return:\n                                    <DatePicker\n                                        selected={this.state.returnDate}\n                                        onChange={date => this.setState({ returnDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ returnTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n\n                            </div>\n                        }\n                        <input type=\"submit\" value=\"Submit\" />\n                    </form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst props = {};\n\nexport default EventModal;","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/EventModal/EventModal.jsx",["74"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/Navbar.jsx",["75"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGlobalContext } from \"../../utils/GlobalContext.js\";\nimport './Navbar.css';\n\nconst Navbar = () => {\n\n  const [userContext, setUserContext] = useGlobalContext();\n\n  const logout = () => {\n    setUserContext({ user: \"\", isAuth: false })\n  }\n\n  return (\n    <nav className=\"Navbar\">\n      <div className=\"Navbar-brand\">\n        <span>Traveler</span>\n      </div>\n\n      <ul className=\"Navbar-links\">\n        <li className=\"Navbar-link\">\n          <Link to=\"/\">\n            Homepage\n          </Link>\n        </li>\n\n        <ul className=\"Navbar-Links dropdown menu\" data-dropdown-menu>\n          <li>\n            <button className=\"Navbar-links\" onClick={logout}>Logout</button>\n          </li>\n        </ul>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"84","line":1,"column":39,"nodeType":"82","messageId":"83","endLine":1,"endColumn":47},{"ruleId":"85","severity":1,"message":"86","line":60,"column":17,"nodeType":"87","endLine":60,"endColumn":53},{"ruleId":"85","severity":1,"message":"86","line":62,"column":24,"nodeType":"87","endLine":62,"endColumn":36},{"ruleId":"85","severity":1,"message":"86","line":63,"column":24,"nodeType":"87","endLine":63,"endColumn":36},{"ruleId":"85","severity":1,"message":"86","line":64,"column":24,"nodeType":"87","endLine":64,"endColumn":36},{"ruleId":"80","severity":1,"message":"88","line":133,"column":13,"nodeType":"82","messageId":"83","endLine":133,"endColumn":19},{"ruleId":"89","severity":1,"message":"90","line":137,"column":37,"nodeType":"91","messageId":"92","endLine":137,"endColumn":39},{"ruleId":"89","severity":1,"message":"90","line":151,"column":37,"nodeType":"91","messageId":"92","endLine":151,"endColumn":39},{"ruleId":"80","severity":1,"message":"93","line":204,"column":7,"nodeType":"82","messageId":"83","endLine":204,"endColumn":12},{"ruleId":"80","severity":1,"message":"93","line":257,"column":7,"nodeType":"82","messageId":"83","endLine":257,"endColumn":12},{"ruleId":"80","severity":1,"message":"94","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":21},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'allDay' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'props' is assigned a value but never used.","'userContext' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]