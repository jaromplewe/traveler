[{"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/index.js":"1","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/App.js":"2","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Login.jsx":"3","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/utils/GlobalContext.js":"4","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Homepage.jsx":"5","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/LoginModal/LoginModal.jsx":"6","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/SignupModal/SignupModal.jsx":"7","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/index.js":"8","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripMenu/TripMenu.jsx":"9","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Calendar/Calendar.jsx":"10","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/EventModal/EventModal.jsx":"11","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripModal/TripModal.jsx":"12","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/Navbar.jsx":"13","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/service-worker.js":"14","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/serviceWorkerRegistration.js":"15"},{"size":646,"mtime":1610063729843,"results":"16","hashOfConfig":"17"},{"size":753,"mtime":1610068222283,"results":"18","hashOfConfig":"17"},{"size":401,"mtime":1610058105651,"results":"19","hashOfConfig":"17"},{"size":621,"mtime":1610068182513,"results":"20","hashOfConfig":"17"},{"size":777,"mtime":1610068254299,"results":"21","hashOfConfig":"17"},{"size":2907,"mtime":1610068494434,"results":"22","hashOfConfig":"17"},{"size":7946,"mtime":1610068589943,"results":"23","hashOfConfig":"17"},{"size":35,"mtime":1607802771801,"results":"24","hashOfConfig":"17"},{"size":2417,"mtime":1609900253910,"results":"25","hashOfConfig":"17"},{"size":6648,"mtime":1610068449256,"results":"26","hashOfConfig":"17"},{"size":6709,"mtime":1609990517891,"results":"27","hashOfConfig":"17"},{"size":8374,"mtime":1609990517891,"results":"28","hashOfConfig":"17"},{"size":842,"mtime":1610068533741,"results":"29","hashOfConfig":"17"},{"size":2837,"mtime":1610063675254,"results":"30","hashOfConfig":"17"},{"size":5064,"mtime":1610063716134,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"z5xaa6",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/index.js",[],["67","68"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/App.js",["69","70"],"import React, { Component, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport GlobalProvider from './utils/GlobalContext.js';\nimport Homepage from './pages/Homepage';\nimport Login from './pages/Login.jsx';\nimport Navbar from './components/Navbar';\nimport $ from \"jquery\";\n\nconst App = () => {\n\n  useEffect(() => {\n    $(document).foundation();\n  });\n\n  return (\n    <Router>\n      <GlobalProvider>\n        <Navbar />\n        <div className=\"App\">\n          <Switch>\n            <Route exact path='/' component={Homepage} />\n            <Route exact path='/login' component={Login} />\n          </Switch>\n        </div>\n      </GlobalProvider>\n    </Router >\n  );\n}\n\nexport default App;\n","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Login.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/utils/GlobalContext.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Homepage.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/LoginModal/LoginModal.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/SignupModal/SignupModal.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/index.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripMenu/TripMenu.jsx",["71","72","73","74","75","76","77","78","79","80","81","82"],"import React, { Component } from 'react';\nimport './tripMenu.css'\nimport EventModal from \"../EventModal/EventModal.jsx\"\nimport TripModal from \"../TripModal/TripModal.jsx\"\nimport $ from \"jquery\";\n\nclass TripMenu extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventType: '',\n        };\n\n    }\n\n    componentDidMount() {\n        $(document).foundation();\n    }\n\n    render() {\n        return (\n            <>\n                <EventModal/>\n                <TripModal/>\n                {/* <div class=\"primary button-group\">\n                    <a class=\"trip-button button\">Add Trip</a>\n                    <a class=\"event-button button\" onClick={<EventModal/>}>Add Event</a>\n                </div> */}\n                <div class=\"callout\">\n                    <ul class=\"accordion\" data-accordion>\n                        <li class=\"accordion-item is-active\" data-accordion-item>\n                            <a href=\"#\" class=\"accordion-title\">Next Trip</a>\n                            <div class=\"accordion-content\" data-tab-content>\n                                <p><a href=\"#\">Flights</a></p>\n                                <p><a href=\"#\">Lodging</a></p>\n                                <p><a href=\"#\">Activities</a></p>\n                            </div>\n                        </li>\n                        <li class=\"accordion-item\" data-accordion-item>\n                            <a href=\"#\" class=\"accordion-title\">Trip B</a>\n                            <div class=\"accordion-content\" data-tab-content>\n                                <p><a href=\"#\">Flights</a></p>\n                                <p><a href=\"#\">Lodging</a></p>\n                                <p><a href=\"#\">Activities</a></p>\n                            </div>\n                        </li>\n                        <li class=\"accordion-item\" data-accordion-item>\n                            <a href=\"#\" class=\"accordion-title\">Trip C</a>\n                            <div class=\"accordion-content\" data-tab-content>\n                                <p><a href=\"#\">Flights</a></p>\n                                <p><a href=\"#\">Lodging</a></p>\n                                <p><a href=\"#\">Activities</a></p>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </>\n        );\n    }\n};\n\nexport default TripMenu;","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Calendar/Calendar.jsx",["83","84","85"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/EventModal/EventModal.jsx",["86"],"import React, { Component } from 'react';\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\n\nclass EventModal extends Component {\n    constructor() {\n        super();\n        this.state = {\n            showModal: false,\n            eventType: \"\"\n        };\n\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        },\n        overlay: { zIndex: 1000 }\n    };\n\n    handleOpenModal() {\n        this.setState({ showModal: true });\n    }\n\n    handleCloseModal() {\n        this.setState({ showModal: false });\n    }\n\n    handleChange(event) {\n        console.log(event)\n        this.setState({ eventType: event.target.value });\n        console.log(this.state.eventType)\n    }\n\n    handleSubmit(event) {\n        console.log(this.state.location, this.state.departureDate, this.state.returnDate);\n        event.preventDefault();\n        var eventData = {\n            type: this.state.eventType,\n            location: this.state.location,\n            startDate: this.state.departureDate,\n            endDate: this.state.returnDate,\n        };\n\n        // if (!eventData.email || !eventData.password) {\n        //     return;\n        // }\n\n        this.logEvent(eventData.type, eventData.location, eventData.startDate, eventData.endDate);\n        this.handleCloseModal();\n    };\n\n    logEvent = (type, location, startDate, endDate) => {\n        axios.post(\"/api/traveler/add-event\", {\n            trip: \"hello\",\n            type: type,\n            startDate: startDate,\n            endDate: endDate\n        })\n            .then(function () {\n                console.log(\"success\");\n                // window.location.replace(\"/\");\n                // If there's an error, log the error\n            })\n            .catch(function (err) {\n                console.log(err);\n            });\n    };\n\n    render() {\n        return (\n            <div>\n                <button class=\"event-button button\" onClick={this.handleOpenModal}>Add Event</button>\n                <Modal\n                    isOpen={this.state.showModal}\n                    contentLabel=\"onRequestClose Example\"\n                    onRequestClose={this.handleCloseModal}\n                    shouldCloseOnOverlayClick={false}\n                    style={this.customStyles}\n                    ariaHideApp={false}\n                >\n                    <button onClick={this.handleCloseModal}>X</button>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Type of Event:\n                        <select value={this.state.eventType} onChange={this.handleChange}>\n                                <option value=\"\">Select event type...</option>\n                                <option value=\"flight\">Flight</option>\n                                <option value=\"lodging\">Lodging</option>\n                                <option value=\"activity\">Activity</option>\n                            </select>\n                        </label>\n                        {this.state.eventType === \"flight\" &&\n                            <div>\n                                <label>\n                                    Flight Number:\n                                <input type=\"text\" name=\"flightNum\" />\n                                </label>\n                                <label>\n                                    Departure Time:\n                                <input type=\"text\" name=\"departureTime\" />\n                                </label>\n                                <label>\n                                    Arrival Time:\n                                <input type=\"text\" name=\"arrivalTime\" />\n                                </label>\n                                <label>\n                                    Additional Info:\n                                <input type=\"text\" name=\"additionalInfoFlight\" />\n                                </label>\n                            </div>\n                        }\n                        {this.state.eventType === \"lodging\" &&\n                            <div>\n                                <label>\n                                    Lodging Name:\n                            <input type=\"text\" name=\"lodgingName\" />\n                                </label>\n                                <label>\n                                    Check-in Date:\n                            <input type=\"text\" name=\"checkInDate\" />\n                                </label>\n                                <label>\n                                    Check-out Date:\n                            <input type=\"text\" name=\"checkOutDate\" />\n                                </label>\n                                <label>\n                                    Additional Info:\n                            <input type=\"text\" name=\"additionalInfoLodge\" />\n                                </label>\n                            </div>\n                        }\n                        {this.state.eventType === \"activity\" &&\n                            <div>\n                                <label>\n                                    Activity Name:\n                            <input type=\"text\" name=\"activityName\" />\n                                </label>\n                                <label>\n                                    Date:\n                            <input type=\"text\" name=\"activityDate\" />\n                                </label>\n                                <label>\n                                    Start Time:\n                            <input type=\"text\" name=\"activityStart\" />\n                                </label>\n                                <label>\n                                    End Time:\n                            <input type=\"text\" name=\"activityEnd\" />\n                                </label>\n                                <label>\n                                    Additional Info:\n                            <input type=\"text\" name=\"additionalInfoActivity\" />\n                                </label>\n                            </div>\n                        }\n                        <input type=\"submit\" value=\"Submit\" />\n                    </form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst props = {};\n\nexport default EventModal;","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripModal/TripModal.jsx",["87"],"import React, { Component } from 'react';\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport { TimePicker } from 'antd';\nimport moment from 'moment';\nimport 'antd/dist/antd.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass EventModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            // eventType: \"\",\n            location: \"\",\n            departureDate: \"\",\n            departureTime: \"\",\n            // returnDate: \"\",\n            // returnTime: \"\",\n        };\n\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        },\n        overlay: { zIndex: 1000 }\n    };\n\n    handleOpenModal() {\n        this.setState({ showModal: true });\n    }\n\n    handleCloseModal() {\n        this.setState({ showModal: false });\n    }\n\n    handleChange(event) {\n        console.log(event)\n        this.setState({ eventType: event.target.value });\n        console.log(this.state.eventType)\n    }\n\n    handleSubmit(event) {\n        console.log(this.state.location, this.state.departureDate, this.state.returnDate);\n        event.preventDefault();\n        var tripData = {\n            location: this.state.location,\n            startDate: this.state.departureDate,\n            endDate: this.state.returnDate,\n        };\n\n        // if (!tripData.email || !tripData.password) {\n        //     return;\n        // }\n\n        this.logTrip(tripData.location, tripData.startDate, tripData.endDate);\n        this.handleCloseModal();\n    };\n\n    logTrip = (location, startDate, endDate) => {\n        axios.post(\"/api/traveler/add-trip\", {\n            user: localStorage.getItem(\"user\"),\n            location: location,\n            startDate: startDate,\n            endDate: endDate\n        })\n            .then(function () {\n                console.log(\"success\");\n                // window.location.replace(\"/\");\n                // If there's an error, log the error\n            })\n            .catch(function (err) {\n                console.log(err);\n            });\n    };\n\n    render() {\n        return (\n            <div>\n                <button class=\"trip-button button\" onClick={this.handleOpenModal}>Add Trip</button>\n                <Modal\n                    isOpen={this.state.showModal}\n                    contentLabel=\"onRequestClose Example\"\n                    onRequestClose={this.handleCloseModal}\n                    shouldCloseOnOverlayClick={false}\n                    style={this.customStyles}\n                    ariaHideApp={false}\n                >\n                    <button onClick={this.handleCloseModal}>X</button>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Where are you going?\n                            <input onChange={e => this.setState({ location: e.target.value })} type=\"text\" name=\"tripLocation\" />\n                        </label>\n                        <div>\n                            Departure:\n                            <DatePicker\n                                selected={this.state.departureDate}\n                                onChange={date => this.setState({ departureDate: date })}\n                                shouldCloseOnSelect=\"true\"\n                            />\n                        </div>\n                        <div>\n                            Return:\n                            <DatePicker\n                                selected={this.state.returnDate}\n                                onChange={date => this.setState({ returnDate: date })}\n                                shouldCloseOnSelect=\"true\"\n                            />\n                        </div>\n                        {this.state.eventType === \"flight\" &&\n                            <div>\n                                <label>\n                                    Flight Number:\n                                <input type=\"text\" name=\"flightNum\" />\n                                </label>\n                                <div>\n                                    Departure:\n                                    <DatePicker\n                                        selected={this.state.departureDate}\n                                        onChange={date => this.setState({ departureDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ departureTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n                                <div>\n                                    Return:\n                                    <DatePicker\n                                        selected={this.state.returnDate}\n                                        onChange={date => this.setState({ returnDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ returnTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n                                <label>\n                                    Additional Info:\n                                <input type=\"text\" name=\"additionalInfoFlight\" />\n                                </label>\n                            </div>\n                        }\n                        {this.state.eventType === \"drive\" &&\n                            <div>\n                                <div>\n                                    Departure:\n                                    <DatePicker\n                                        selected={this.state.departureDate}\n                                        onChange={date => this.setState({ departureDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ departureTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n                                <div>\n                                    Return:\n                                    <DatePicker\n                                        selected={this.state.returnDate}\n                                        onChange={date => this.setState({ returnDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ returnTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n\n                            </div>\n                        }\n                        <input type=\"submit\" value=\"Submit\" />\n                    </form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst props = {};\n\nexport default EventModal;","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/Navbar.jsx",["88"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/service-worker.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/serviceWorkerRegistration.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":26},{"ruleId":"93","severity":1,"message":"97","line":1,"column":39,"nodeType":"95","messageId":"96","endLine":1,"endColumn":47},{"ruleId":"98","severity":1,"message":"99","line":33,"column":29,"nodeType":"100","endLine":33,"endColumn":65},{"ruleId":"98","severity":1,"message":"99","line":35,"column":36,"nodeType":"100","endLine":35,"endColumn":48},{"ruleId":"98","severity":1,"message":"99","line":36,"column":36,"nodeType":"100","endLine":36,"endColumn":48},{"ruleId":"98","severity":1,"message":"99","line":37,"column":36,"nodeType":"100","endLine":37,"endColumn":48},{"ruleId":"98","severity":1,"message":"99","line":41,"column":29,"nodeType":"100","endLine":41,"endColumn":65},{"ruleId":"98","severity":1,"message":"99","line":43,"column":36,"nodeType":"100","endLine":43,"endColumn":48},{"ruleId":"98","severity":1,"message":"99","line":44,"column":36,"nodeType":"100","endLine":44,"endColumn":48},{"ruleId":"98","severity":1,"message":"99","line":45,"column":36,"nodeType":"100","endLine":45,"endColumn":48},{"ruleId":"98","severity":1,"message":"99","line":49,"column":29,"nodeType":"100","endLine":49,"endColumn":65},{"ruleId":"98","severity":1,"message":"99","line":51,"column":36,"nodeType":"100","endLine":51,"endColumn":48},{"ruleId":"98","severity":1,"message":"99","line":52,"column":36,"nodeType":"100","endLine":52,"endColumn":48},{"ruleId":"98","severity":1,"message":"99","line":53,"column":36,"nodeType":"100","endLine":53,"endColumn":48},{"ruleId":"93","severity":1,"message":"101","line":132,"column":13,"nodeType":"95","messageId":"96","endLine":132,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":136,"column":37,"nodeType":"104","messageId":"105","endLine":136,"endColumn":39},{"ruleId":"102","severity":1,"message":"103","line":150,"column":37,"nodeType":"104","messageId":"105","endLine":150,"endColumn":39},{"ruleId":"93","severity":1,"message":"106","line":175,"column":7,"nodeType":"95","messageId":"96","endLine":175,"endColumn":12},{"ruleId":"93","severity":1,"message":"106","line":204,"column":7,"nodeType":"95","messageId":"96","endLine":204,"endColumn":12},{"ruleId":"93","severity":1,"message":"107","line":8,"column":10,"nodeType":"95","messageId":"96","endLine":8,"endColumn":21},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'allDay' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'props' is assigned a value but never used.","'userContext' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]