[{"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/index.js":"1","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/App.js":"2","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/utils/GlobalContext.js":"3","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Homepage.jsx":"4","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/SignupModal/SignupModal.jsx":"5","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/LoginModal/LoginModal.jsx":"6","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/index.js":"7","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripMenu/TripMenu.jsx":"8","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Calendar/Calendar.jsx":"9","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripModal/TripModal.jsx":"10","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/EventModal/EventModal.jsx":"11","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/Navbar.jsx":"12","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/notifications/pushNotifications.js":"13","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/serviceWorkerRegistration.js":"14","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Footer/Footer.jsx":"15","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Landing.jsx":"16"},{"size":646,"mtime":1610681849885,"results":"17","hashOfConfig":"18"},{"size":724,"mtime":1610681239045,"results":"19","hashOfConfig":"18"},{"size":621,"mtime":1610077769106,"results":"20","hashOfConfig":"18"},{"size":747,"mtime":1610681849886,"results":"21","hashOfConfig":"18"},{"size":8003,"mtime":1610503906073,"results":"22","hashOfConfig":"18"},{"size":3001,"mtime":1610503906072,"results":"23","hashOfConfig":"18"},{"size":35,"mtime":1607802771801,"results":"24","hashOfConfig":"18"},{"size":4108,"mtime":1610681849884,"results":"25","hashOfConfig":"18"},{"size":7646,"mtime":1610681849883,"results":"26","hashOfConfig":"18"},{"size":8560,"mtime":1610503906074,"results":"27","hashOfConfig":"18"},{"size":10454,"mtime":1610681849884,"results":"28","hashOfConfig":"18"},{"size":1534,"mtime":1610681841552,"results":"29","hashOfConfig":"18"},{"size":2713,"mtime":1610498255737,"results":"30","hashOfConfig":"18"},{"size":5064,"mtime":1610681849887,"results":"31","hashOfConfig":"18"},{"size":631,"mtime":1610681845805,"results":"32","hashOfConfig":"18"},{"size":1397,"mtime":1610681239081,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z5xaa6",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":3,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/index.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/App.js",["68","69"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/utils/GlobalContext.js",[],["70","71"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Homepage.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/SignupModal/SignupModal.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/LoginModal/LoginModal.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/index.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripMenu/TripMenu.jsx",["72"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Calendar/Calendar.jsx",["73","74","75"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripModal/TripModal.jsx",["76","77"],"import React, { Component } from 'react';\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport { TimePicker } from 'antd';\nimport moment from 'moment';\nimport 'antd/dist/antd.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { GlobalContext } from \"../../utils/GlobalContext.js\";\nimport cron from \"node-cron\";\n\nclass EventModal extends Component {\n    static contextType = GlobalContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            // eventType: \"\",\n            location: \"\",\n            departureDate: \"\",\n            departureTime: \"\",\n            // returnDate: \"\",\n            // returnTime: \"\",\n        };\n\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        },\n        overlay: { zIndex: 1000 }\n    };\n\n    handleOpenModal() {\n        this.setState({ showModal: true });\n    }\n\n    handleCloseModal() {\n        this.setState({ showModal: false });\n    }\n\n    handleChange(event) {\n        console.log(event)\n        this.setState({ eventType: event.target.value });\n        console.log(this.state.eventType)\n    }\n\n    handleSubmit(event) {\n        console.log(this.state.location, this.state.departureDate, this.state.returnDate);\n        event.preventDefault();\n        var tripData = {\n            location: this.state.location,\n            startDate: this.state.departureDate,\n            endDate: this.state.returnDate,\n        };\n\n        // if (!tripData.email || !tripData.password) {\n        //     return;\n        // }\n\n        this.logTrip(tripData.location, tripData.startDate, tripData.endDate);\n        this.handleCloseModal();\n    };\n\n    logTrip = (location, startDate, endDate) => {\n        const userContext = this.context;\n        axios.post(\"/api/traveler/add-trip\", {\n            user: userContext[0].user,\n            location: location,\n            startDate: startDate,\n            endDate: endDate\n        })\n            .then((response) => {\n                console.log(\"success\");\n                // cron.schedule(\"10 * * * * *\", () => {\n                //     console.log(response)\n                //   });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    render() {\n        return (\n            <div>\n                <button class=\"trip-button button\" onClick={this.handleOpenModal}>Add Trip</button>\n                <Modal\n                    isOpen={this.state.showModal}\n                    contentLabel=\"onRequestClose Example\"\n                    onRequestClose={this.handleCloseModal}\n                    shouldCloseOnOverlayClick={false}\n                    style={this.customStyles}\n                    ariaHideApp={false}\n                >\n                    <button onClick={this.handleCloseModal}>X</button>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Where are you going?\n                            <input onChange={e => this.setState({ location: e.target.value })} type=\"text\" name=\"tripLocation\" />\n                        </label>\n                        <div>\n                            Departure:\n                            <DatePicker\n                                selected={this.state.departureDate}\n                                onChange={date => this.setState({ departureDate: date })}\n                                shouldCloseOnSelect=\"true\"\n                            />\n                        </div>\n                        <div>\n                            Return:\n                            <DatePicker\n                                selected={this.state.returnDate}\n                                onChange={date => this.setState({ returnDate: date })}\n                                shouldCloseOnSelect=\"true\"\n                            />\n                        </div>\n                        {this.state.eventType === \"flight\" &&\n                            <div>\n                                <label>\n                                    Flight Number:\n                                <input type=\"text\" name=\"flightNum\" />\n                                </label>\n                                <div>\n                                    Departure:\n                                    <DatePicker\n                                        selected={this.state.departureDate}\n                                        onChange={date => this.setState({ departureDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ departureTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n                                <div>\n                                    Return:\n                                    <DatePicker\n                                        selected={this.state.returnDate}\n                                        onChange={date => this.setState({ returnDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ returnTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n                                <label>\n                                    Additional Info:\n                                <input type=\"text\" name=\"additionalInfoFlight\" />\n                                </label>\n                            </div>\n                        }\n                        {this.state.eventType === \"drive\" &&\n                            <div>\n                                <div>\n                                    Departure:\n                                    <DatePicker\n                                        selected={this.state.departureDate}\n                                        onChange={date => this.setState({ departureDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ departureTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n                                <div>\n                                    Return:\n                                    <DatePicker\n                                        selected={this.state.returnDate}\n                                        onChange={date => this.setState({ returnDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ returnTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n\n                            </div>\n                        }\n                        <input type=\"submit\" value=\"Submit\" />\n                    </form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst props = {};\n\nexport default EventModal;","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/EventModal/EventModal.jsx",["78"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/Navbar.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/notifications/pushNotifications.js",["79","80","81","82","83","84","85"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/serviceWorkerRegistration.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Footer/Footer.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Landing.jsx",[],{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"90","line":1,"column":39,"nodeType":"88","messageId":"89","endLine":1,"endColumn":47},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":92,"column":21,"nodeType":"97","endLine":92,"endColumn":61},{"ruleId":"86","severity":1,"message":"98","line":163,"column":13,"nodeType":"88","messageId":"89","endLine":163,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":167,"column":37,"nodeType":"101","messageId":"102","endLine":167,"endColumn":39},{"ruleId":"99","severity":1,"message":"100","line":181,"column":37,"nodeType":"101","messageId":"102","endLine":181,"endColumn":39},{"ruleId":"86","severity":1,"message":"103","line":10,"column":8,"nodeType":"88","messageId":"89","endLine":10,"endColumn":12},{"ruleId":"86","severity":1,"message":"104","line":210,"column":7,"nodeType":"88","messageId":"89","endLine":210,"endColumn":12},{"ruleId":"86","severity":1,"message":"104","line":257,"column":7,"nodeType":"88","messageId":"89","endLine":257,"endColumn":12},{"ruleId":"86","severity":1,"message":"105","line":4,"column":7,"nodeType":"88","messageId":"89","endLine":4,"endColumn":34},{"ruleId":"86","severity":1,"message":"106","line":11,"column":9,"nodeType":"88","messageId":"89","endLine":11,"endColumn":36},{"ruleId":"86","severity":1,"message":"107","line":16,"column":9,"nodeType":"88","messageId":"89","endLine":16,"endColumn":39},{"ruleId":"108","severity":2,"message":"109","line":22,"column":29,"nodeType":"88","messageId":"110","endLine":22,"endColumn":48},{"ruleId":"86","severity":1,"message":"111","line":26,"column":9,"nodeType":"88","messageId":"89","endLine":26,"endColumn":25},{"ruleId":"108","severity":2,"message":"112","line":37,"column":3,"nodeType":"88","messageId":"110","endLine":37,"endColumn":19},{"ruleId":"108","severity":2,"message":"113","line":38,"column":5,"nodeType":"88","messageId":"110","endLine":38,"endColumn":21},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["114"],"no-negated-in-lhs",["115"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'allDay' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'cron' is defined but never used.","'props' is assigned a value but never used.","'isPushNotificationSupported' is assigned a value but never used.","'initializePushNotifications' is assigned a value but never used.","'createNotificationSubscription' is assigned a value but never used.","no-undef","'pushServerPublicKey' is not defined.","undef","'postSubscription' is assigned a value but never used.","'sendNotification' is not defined.","'pushSubscription' is not defined.","no-global-assign","no-unsafe-negation"]