[{"/Users/jaromplewe/bootcamp/projects/traveler/client/src/index.js":"1","/Users/jaromplewe/bootcamp/projects/traveler/client/src/App.js":"2","/Users/jaromplewe/bootcamp/projects/traveler/client/src/utils/GlobalContext.js":"3","/Users/jaromplewe/bootcamp/projects/traveler/client/src/pages/AddTodo.jsx":"4","/Users/jaromplewe/bootcamp/projects/traveler/client/src/pages/Homepage.jsx":"5","/Users/jaromplewe/bootcamp/projects/traveler/client/src/components/Navbar/index.js":"6","/Users/jaromplewe/bootcamp/projects/traveler/client/src/components/Calendar/Calendar.jsx":"7","/Users/jaromplewe/bootcamp/projects/traveler/client/src/components/Navbar/Navbar.jsx":"8","/Users/jaromplewe/bootcamp/projects/traveler/client/src/components/MiniMenu/MiniMenu.jsx":"9","/Users/jaromplewe/bootcamp/projects/traveler/client/src/pages/Trips.jsx":"10"},{"size":327,"mtime":1608411089804,"results":"11","hashOfConfig":"12"},{"size":892,"mtime":1608671764764,"results":"13","hashOfConfig":"12"},{"size":772,"mtime":1607659618000,"results":"14","hashOfConfig":"12"},{"size":1091,"mtime":1607659934000,"results":"15","hashOfConfig":"12"},{"size":509,"mtime":1608668873718,"results":"16","hashOfConfig":"12"},{"size":35,"mtime":1607657352000,"results":"17","hashOfConfig":"12"},{"size":4641,"mtime":1608411141734,"results":"18","hashOfConfig":"12"},{"size":944,"mtime":1608675595690,"results":"19","hashOfConfig":"12"},{"size":892,"mtime":1608671403762,"results":"20","hashOfConfig":"12"},{"size":953,"mtime":1608671534135,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"obqz6w",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"/Users/jaromplewe/bootcamp/projects/traveler/client/src/index.js",[],["45","46"],"/Users/jaromplewe/bootcamp/projects/traveler/client/src/App.js",[],"/Users/jaromplewe/bootcamp/projects/traveler/client/src/utils/GlobalContext.js",[],"/Users/jaromplewe/bootcamp/projects/traveler/client/src/pages/AddTodo.jsx",[],"/Users/jaromplewe/bootcamp/projects/traveler/client/src/pages/Homepage.jsx",[],"/Users/jaromplewe/bootcamp/projects/traveler/client/src/components/Navbar/index.js",[],"/Users/jaromplewe/bootcamp/projects/traveler/client/src/components/Calendar/Calendar.jsx",["47","48","49"],"import React, { Component } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\n\n// import \"./App.css\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst localizer = momentLocalizer(moment);\nconst DnDCalendar = withDragAndDrop(Calendar);\nconst propTypes = {}\nconsole.log(DnDCalendar)\nclass TravelCalendar extends Component {\n    state = {\n        events: [\n            // {\n            //     start: moment().toDate(),\n            //     end: moment().add(1, \"days\").toDate(),\n            //     title: \"Some title\",\n            // },\n        ],\n        displayDragItemInCell: true\n    };\n\n    handleSelect = ({ start, end }) => {\n        const title = window.prompt('New Event name')\n        if (title)\n            this.setState({\n                events: [\n                    ...this.state.events,\n                    {\n                        start,\n                        end,\n                        title,\n                    },\n                ],\n            })\n    }\n\n    onEventResize = (data) => {\n        const { start, end } = data;\n\n        this.setState((state) => {\n            state.events[0].start = start;\n            state.events[0].end = end;\n            return { events: [...state.events] };\n        });\n    };\n\n    onEventDrop = (data) => {\n        console.log(data);\n    };\n\n\n\n\n\n    // Drag and Drop Code:\n    handleDragStart = event => {\n        this.setState({ draggedEvent: event })\n    }\n\n    dragFromOutsideItem = () => {\n        return this.state.draggedEvent\n    }\n\n    onDropFromOutside = ({ start, end, allDay }) => {\n        const { draggedEvent } = this.state\n\n        const event = {\n            id: draggedEvent.id,\n            title: draggedEvent.title,\n            start,\n            end,\n            allDay: allDay,\n        }\n\n        this.setState({ draggedEvent: null })\n        this.moveEvent({ event, start, end })\n    }\n\n    moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\n        const { events } = this.state\n\n        let allDay = event.allDay\n\n        if (!event.allDay && droppedOnAllDaySlot) {\n            allDay = true\n        } else if (event.allDay && !droppedOnAllDaySlot) {\n            allDay = false\n        }\n\n        const nextEvents = events.map(existingEvent => {\n            return existingEvent.id == event.id\n                ? { ...existingEvent, start, end }\n                : existingEvent\n        })\n\n        this.setState({\n            events: nextEvents,\n        })\n\n        // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n    }\n\n    resizeEvent = ({ event, start, end }) => {\n        const { events } = this.state\n\n        const nextEvents = events.map(existingEvent => {\n            return existingEvent.id == event.id\n                ? { ...existingEvent, start, end }\n                : existingEvent\n        })\n\n        this.setState({\n            events: nextEvents,\n        })\n\n        //alert(`${event.title} was resized to ${start}-${end}`)\n    }\n\n    handleEventEditModal = (event) => {\n        console.log(\"hit event: \", event)\n    }\n\n\n\n\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <DnDCalendar\n                    data-toggle=\"eventModal\"\n                    selectable\n                    defaultDate={moment().toDate()}\n                    defaultView=\"month\"\n                    events={this.state.events}\n                    localizer={localizer}\n                    scrollToTime={new Date(1970, 1, 1, 6)}\n                    onSelectEvent={this.handleEventEditModal}\n                    onEventDrop={this.moveEvent}\n                    onEventResize={this.resizeEvent}\n                    dragFromOutsideItem={\n                        this.state.displayDragItemInCell ? this.dragFromOutsideItem : null\n                    }\n                    onDropFromOutside={this.onDropFromOutside}\n                    handleDragStart={this.handleDragStart}\n                    resizable\n                    onSelectSlot={this.handleSelect}\n                    style={{ height: \"75vh\" }}\n                    popup\n                />\n                <button\n                    onClick={this.handleEventEditModal}\n                    className=\"button\"\n                    data-toggle=\"eventModal\"\n                >\n                    Edit Event\n                </button>\n            </div>\n        );\n    }\n}\n\nTravelCalendar.propTypes = propTypes\n\nexport default TravelCalendar;","/Users/jaromplewe/bootcamp/projects/traveler/client/src/components/Navbar/Navbar.jsx",["50","51","52","53"],"/Users/jaromplewe/bootcamp/projects/traveler/client/src/components/MiniMenu/MiniMenu.jsx",[],"/Users/jaromplewe/bootcamp/projects/traveler/client/src/pages/Trips.jsx",["54"],"import React, { useEffect } from 'react';\r\nimport { useGlobalContext } from '../utils/GlobalContext';\r\n\r\nconst Trips = () => {\r\n  const [state, dispatch] = useGlobalContext();\r\n  console.log({ state })\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchTodos() {\r\n      try {\r\n        const response = await fetch('/api/todo');\r\n        const json = await response.json();\r\n        console.log({ json });\r\n\r\n        dispatch({ type: 'setTodos', payload: json.data });\r\n      } catch (err) {\r\n        console.log({ err });\r\n      }\r\n    }\r\n\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Todos\">\r\n      <h3 className=\"Todos-header\">Current Todos</h3>\r\n      <ul className=\"Todos-list\">\r\n        {state.todos.map(todo => (\r\n          <li key={todo._id} className=\"Todos-listItem\">\r\n            <span>\r\n              {todo.text}\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trips;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":91,"column":13,"nodeType":"61","messageId":"62","endLine":91,"endColumn":19},{"ruleId":"63","severity":1,"message":"64","line":95,"column":37,"nodeType":"65","messageId":"66","endLine":95,"endColumn":39},{"ruleId":"63","severity":1,"message":"64","line":111,"column":37,"nodeType":"65","messageId":"66","endLine":111,"endColumn":39},{"ruleId":"67","severity":1,"message":"68","line":27,"column":13,"nodeType":"69","endLine":27,"endColumn":25},{"ruleId":"67","severity":1,"message":"68","line":29,"column":19,"nodeType":"69","endLine":29,"endColumn":31},{"ruleId":"67","severity":1,"message":"68","line":30,"column":19,"nodeType":"69","endLine":30,"endColumn":31},{"ruleId":"67","severity":1,"message":"68","line":31,"column":19,"nodeType":"69","endLine":31,"endColumn":31},{"ruleId":"70","severity":1,"message":"71","line":23,"column":6,"nodeType":"72","endLine":23,"endColumn":8,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'allDay' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [dispatch]",{"range":"79","text":"80"},[564,566],"[dispatch]"]
