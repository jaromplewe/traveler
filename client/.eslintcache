[{"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/index.js":"1","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/App.js":"2","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/utils/GlobalContext.js":"3","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Homepage.jsx":"4","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/index.js":"5","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Calendar/Calendar.jsx":"6","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/MiniMenu/MiniMenu.jsx":"7","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/EventModal/EventModal.jsx":"8","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/Navbar.jsx":"9","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Login.jsx":"10"},{"size":327,"mtime":1608411081013,"results":"11","hashOfConfig":"12"},{"size":785,"mtime":1608695766162,"results":"13","hashOfConfig":"12"},{"size":772,"mtime":1607802771802,"results":"14","hashOfConfig":"12"},{"size":521,"mtime":1608695640273,"results":"15","hashOfConfig":"12"},{"size":35,"mtime":1607802771801,"results":"16","hashOfConfig":"12"},{"size":5007,"mtime":1608685250491,"results":"17","hashOfConfig":"12"},{"size":1781,"mtime":1608695640272,"results":"18","hashOfConfig":"12"},{"size":5673,"mtime":1608695640272,"results":"19","hashOfConfig":"12"},{"size":790,"mtime":1608695640272,"results":"20","hashOfConfig":"12"},{"size":2002,"mtime":1608695640273,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"z5xaa6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/index.js",[],["48","49"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/App.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/utils/GlobalContext.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Homepage.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/index.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Calendar/Calendar.jsx",["50","51","52"],"import React, { Component } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport EventModal from \"../EventModal/EventModal.jsx\"\n\n// import \"./App.css\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst localizer = momentLocalizer(moment);\nconst DnDCalendar = withDragAndDrop(Calendar);\nconst propTypes = {}\nclass TravelCalendar extends Component {\n    state = {\n        events: [\n            // {\n            //     start: moment().toDate(),\n            //     end: moment().add(1, \"days\").toDate(),\n            //     title: \"Some title\",\n            // },\n        ],\n        displayDragItemInCell: true\n    };\n\n    handleSelect = ({ start, end }) => {\n        const title = window.prompt('New Event name')\n        if (title)\n            this.setState({\n                events: [\n                    ...this.state.events,\n                    {\n                        start,\n                        end,\n                        title,\n                    },\n                ],\n            })\n    }\n\n    onEventResize = (data) => {\n        const { start, end } = data;\n\n        this.setState((state) => {\n            state.events[0].start = start;\n            state.events[0].end = end;\n            return { events: [...state.events] };\n        });\n    };\n\n    onEventDrop = (data) => {\n        console.log(data);\n    };\n\n\n\n\n\n    // Drag and Drop Code:\n    handleDragStart = event => {\n        this.setState({ draggedEvent: event })\n    }\n\n    dragFromOutsideItem = () => {\n        return this.state.draggedEvent\n    }\n\n    onDropFromOutside = ({ start, end, allDay }) => {\n        const { draggedEvent } = this.state\n\n        const event = {\n            id: draggedEvent.id,\n            title: draggedEvent.title,\n            start,\n            end,\n            allDay: allDay,\n        }\n\n        this.setState({ draggedEvent: null })\n        this.moveEvent({ event, start, end })\n    }\n\n    moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\n        const { events } = this.state\n\n        let allDay = event.allDay\n\n        if (!event.allDay && droppedOnAllDaySlot) {\n            allDay = true\n        } else if (event.allDay && !droppedOnAllDaySlot) {\n            allDay = false\n        }\n\n        const nextEvents = events.map(existingEvent => {\n            return existingEvent.id == event.id\n                ? { ...existingEvent, start, end }\n                : existingEvent\n        })\n\n        this.setState({\n            events: nextEvents,\n        })\n\n        // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n    }\n\n    resizeEvent = ({ event, start, end }) => {\n        const { events } = this.state\n\n        const nextEvents = events.map(existingEvent => {\n            return existingEvent.id == event.id\n                ? { ...existingEvent, start, end }\n                : existingEvent\n        })\n\n        this.setState({\n            events: nextEvents,\n        })\n\n        //alert(`${event.title} was resized to ${start}-${end}`)\n    }\n\n    handleEventEditModal = (event) => {\n        console.log(\"hit event: \", event)\n        return (\n            <EventModal/>\n        )\n    }\n\n\n\n\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                {/* <button\n                    onClick={this.handleEventEditModal}\n                    className=\"button\"\n                    data-toggle=\"eventModal\"\n                >\n                    Add Event\n                </button> */}\n                <EventModal/>\n                <DnDCalendar\n                    data-toggle=\"eventModal\"\n                    selectable\n                    defaultDate={moment().toDate()}\n                    defaultView=\"month\"\n                    events={this.state.events}\n                    localizer={localizer}\n                    scrollToTime={new Date(1970, 1, 1, 6)}\n                    onSelectEvent={this.handleEventEditModal}\n                    onEventDrop={this.moveEvent}\n                    onEventResize={this.resizeEvent}\n                    dragFromOutsideItem={\n                        this.state.displayDragItemInCell ? this.dragFromOutsideItem : null\n                    }\n                    onDropFromOutside={this.onDropFromOutside}\n                    handleDragStart={this.handleDragStart}\n                    resizable\n                    onSelectSlot={this.handleSelect}\n                    style={{ height: \"75vh\" }}\n                    popup\n                />\n                {/* <button\n                    onClick={this.handleEventEditModal}\n                    className=\"button\"\n                    data-toggle=\"eventModal\"\n                >\n                    Edit Event\n                </button> */}\n            </div>\n        );\n    }\n}\n\nTravelCalendar.propTypes = propTypes\n\nexport default TravelCalendar;","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/MiniMenu/MiniMenu.jsx",["53","54","55","56","57","58","59","60","61","62","63","64"],"import React, { Component } from 'react';\nimport './miniMenu.css'\n\nclass MiniMenu extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventType: ''\n        };\n    }\n    render() {\n        return (\n           <div class=\"callout\">\n                <ul class=\"accordion\" data-accordion>\n                    <li class=\"accordion-item is-active\" data-accordion-item>\n                        <a href=\"#\" class=\"accordion-title\">Next Trip</a>\n                        <div class=\"accordion-content\" data-tab-content>\n                            <p><a href=\"#\">Flights</a></p>\n                            <p><a href=\"#\">Lodging</a></p>\n                            <p><a href=\"#\">Activities</a></p>\n                        </div>\n                    </li>\n                    <li class=\"accordion-item\" data-accordion-item>\n                        <a href=\"#\" class=\"accordion-title\">Trip B</a>\n                        <div class=\"accordion-content\" data-tab-content>\n                            <p><a href=\"#\">Flights</a></p>\n                            <p><a href=\"#\">Lodging</a></p>\n                            <p><a href=\"#\">Activities</a></p>\n                        </div>\n                    </li>\n                    <li class=\"accordion-item\" data-accordion-item>\n                        <a href=\"#\" class=\"accordion-title\">Trip C</a>\n                        <div class=\"accordion-content\" data-tab-content>\n                            <p><a href=\"#\">Flights</a></p>\n                            <p><a href=\"#\">Lodging</a></p>\n                            <p><a href=\"#\">Activities</a></p>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n};\n\nexport default MiniMenu;","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/EventModal/EventModal.jsx",["65"],"import React, { Component } from 'react';\nimport Modal from \"react-modal\";\n\nclass EventModal extends Component {\n    constructor() {\n        super();\n        this.state = {\n            showModal: false,\n            eventType: \"\"\n        };\n\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        },\n        overlay: { zIndex: 1000 }\n    };\n\n    handleOpenModal() {\n        this.setState({ showModal: true });\n    }\n\n    handleCloseModal() {\n        this.setState({ showModal: false });\n    }\n\n    handleChange(event) {\n        console.log(event)\n        this.setState({ eventType: event.target.value });\n        console.log(this.state.eventType)\n    }\n\n    handleSubmit(event) {\n        console.log('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleOpenModal}>Add Event</button>\n                <Modal\n                    isOpen={this.state.showModal}\n                    contentLabel=\"onRequestClose Example\"\n                    onRequestClose={this.handleCloseModal}\n                    shouldCloseOnOverlayClick={false}\n                    style={this.customStyles}\n                    ariaHideApp={false}\n                >\n                    <button onClick={this.handleCloseModal}>X</button>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Type of Event:\n                        <select value={this.state.eventType} onChange={this.handleChange}>\n                                <option value=\"\">Select event type...</option>\n                                <option value=\"flight\">Flight</option>\n                                <option value=\"lodging\">Lodging</option>\n                                <option value=\"activity\">Activity</option>\n                            </select>\n                        </label>\n                        {this.state.eventType === \"flight\" &&\n                            <div>\n                                <label>\n                                    Flight Number:\n                                <input type=\"text\" name=\"flightNum\" />\n                                </label>\n                                <label>\n                                    Departure Time:\n                                <input type=\"text\" name=\"departureTime\" />\n                                </label>\n                                <label>\n                                    Arrival Time:\n                                <input type=\"text\" name=\"arrivalTime\" />\n                                </label>\n                                <label>\n                                    Additional Info:\n                                <input type=\"text\" name=\"additionalInfoFlight\" />\n                                </label>\n                            </div>\n                        }\n                        {this.state.eventType === \"lodging\" &&\n                            <div>\n                                <label>\n                                    Lodging Name:\n                            <input type=\"text\" name=\"lodgingName\" />\n                                </label>\n                                <label>\n                                    Check-in Date:\n                            <input type=\"text\" name=\"checkInDate\" />\n                                </label>\n                                <label>\n                                    Check-out Date:\n                            <input type=\"text\" name=\"checkOutDate\" />\n                                </label>\n                                <label>\n                                    Additional Info:\n                            <input type=\"text\" name=\"additionalInfoLodge\" />\n                                </label>\n                            </div>\n                        }\n                        {this.state.eventType === \"activity\" &&\n                            <div>\n                                <label>\n                                    Activity Name:\n                            <input type=\"text\" name=\"activityName\" />\n                                </label>\n                                <label>\n                                    Date:\n                            <input type=\"text\" name=\"activityDate\" />\n                                </label>\n                                <label>\n                                    Start Time:\n                            <input type=\"text\" name=\"activityStart\" />\n                                </label>\n                                <label>\n                                    End Time:\n                            <input type=\"text\" name=\"activityEnd\" />\n                                </label>\n                                <label>\n                                    Additional Info:\n                            <input type=\"text\" name=\"additionalInfoActivity\" />\n                                </label>\n                            </div>\n                        }\n                        <input type=\"submit\" value=\"Submit\" />\n                    </form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst props = {};\n\nexport default EventModal;","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/Navbar.jsx",["66","67","68","69"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nconst Navbar = () => {\n  return (\n    <nav className=\"Navbar\">\n      <div className=\"Navbar-brand\">\n        <span>Traveler</span>\n      </div>\n\n      <ul className=\"Navbar-links\">\n        <li className=\"Navbar-link\">\n          <Link to=\"/\">\n            Homepage\n          </Link>\n        </li>\n\n        <ul class=\"Navbar-Links dropdown menu\" data-dropdown-menu>\n          <li>\n            <a href=\"#\">Account</a>\n            <ul className=\"menu\">\n              <li><a href=\"#\">Add a new trip</a></li>\n              <li><a href=\"#\">Profile</a></li>\n              <li><a href=\"#\">Logout</a></li>\n            </ul>\n          </li>\n        </ul>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n\n",["70","71"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Login.jsx",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":91,"column":13,"nodeType":"78","messageId":"79","endLine":91,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":95,"column":37,"nodeType":"82","messageId":"83","endLine":95,"endColumn":39},{"ruleId":"80","severity":1,"message":"81","line":111,"column":37,"nodeType":"82","messageId":"83","endLine":111,"endColumn":39},{"ruleId":"84","severity":1,"message":"85","line":17,"column":25,"nodeType":"86","endLine":17,"endColumn":61},{"ruleId":"84","severity":1,"message":"85","line":19,"column":32,"nodeType":"86","endLine":19,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":20,"column":32,"nodeType":"86","endLine":20,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":21,"column":32,"nodeType":"86","endLine":21,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":25,"column":25,"nodeType":"86","endLine":25,"endColumn":61},{"ruleId":"84","severity":1,"message":"85","line":27,"column":32,"nodeType":"86","endLine":27,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":28,"column":32,"nodeType":"86","endLine":28,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":29,"column":32,"nodeType":"86","endLine":29,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":33,"column":25,"nodeType":"86","endLine":33,"endColumn":61},{"ruleId":"84","severity":1,"message":"85","line":35,"column":32,"nodeType":"86","endLine":35,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":36,"column":32,"nodeType":"86","endLine":36,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":37,"column":32,"nodeType":"86","endLine":37,"endColumn":44},{"ruleId":"76","severity":1,"message":"87","line":144,"column":7,"nodeType":"78","messageId":"79","endLine":144,"endColumn":12},{"ruleId":"84","severity":1,"message":"85","line":21,"column":13,"nodeType":"86","endLine":21,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":23,"column":19,"nodeType":"86","endLine":23,"endColumn":31},{"ruleId":"84","severity":1,"message":"85","line":24,"column":19,"nodeType":"86","endLine":24,"endColumn":31},{"ruleId":"84","severity":1,"message":"85","line":25,"column":19,"nodeType":"86","endLine":25,"endColumn":31},{"ruleId":"72","replacedBy":"88"},{"ruleId":"74","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'allDay' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'props' is assigned a value but never used.",["90"],["91"],"no-global-assign","no-unsafe-negation"]