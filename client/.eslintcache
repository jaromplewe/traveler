[{"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/index.js":"1","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/App.js":"2","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Login.jsx":"3","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Homepage.jsx":"4","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/LoginModal/LoginModal.jsx":"5","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/SignupModal/SignupModal.jsx":"6","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/utils/GlobalContext.js":"7","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/index.js":"8","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Calendar/Calendar.jsx":"9","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripMenu/TripMenu.jsx":"10","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/EventModal/EventModal.jsx":"11","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripModal/TripModal.jsx":"12","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/Navbar.jsx":"13"},{"size":327,"mtime":1608411081013,"results":"14","hashOfConfig":"15"},{"size":1258,"mtime":1609821090206,"results":"16","hashOfConfig":"15"},{"size":397,"mtime":1609602886583,"results":"17","hashOfConfig":"15"},{"size":777,"mtime":1609988802026,"results":"18","hashOfConfig":"15"},{"size":2868,"mtime":1609987671188,"results":"19","hashOfConfig":"15"},{"size":7907,"mtime":1609985117447,"results":"20","hashOfConfig":"15"},{"size":623,"mtime":1609988812563,"results":"21","hashOfConfig":"15"},{"size":35,"mtime":1607802771801,"results":"22","hashOfConfig":"15"},{"size":6417,"mtime":1609821090209,"results":"23","hashOfConfig":"15"},{"size":2417,"mtime":1609900253910,"results":"24","hashOfConfig":"15"},{"size":5701,"mtime":1609604525358,"results":"25","hashOfConfig":"15"},{"size":8852,"mtime":1609821090211,"results":"26","hashOfConfig":"15"},{"size":842,"mtime":1609984810818,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"z5xaa6",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/index.js",[],["61","62"],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/App.js",["63","64"],"import React, { Component, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport GlobalProvider from './utils/GlobalContext.js';\nimport Homepage from './pages/Homepage';\nimport Login from './pages/Login.jsx';\nimport Navbar from './components/Navbar';\nimport $ from \"jquery\";\n\nconst App = () => {\n\n  useEffect(() => {\n    $(document).foundation();\n  });\n\n  return (\n    <Router>\n      <GlobalProvider>\n        <Navbar />\n        <div className=\"App\">\n          <Switch>\n            <Route exact path='/' component={Homepage} />\n            <Route exact path='/login' component={Login} />\n          </Switch>\n        </div>\n      </GlobalProvider>\n    </Router >\n  );\n}\n\n// class App extends Component {\n\n//   componentDidMount() {\n//     $(document).foundation();\n//   }\n\n//   render() {\n//     return (\n//       <Router>\n//         <UserProvider>\n//           <Navbar />\n//           <div className=\"App\">\n//             <Switch>\n//               <Route exact path='/' component={Homepage} />\n//               <Route exact path='/login' component={Login} />\n//             </Switch>\n//           </div>\n//         </UserProvider>\n//       </Router >\n//     );\n//   }\n// };\n\nexport default App;\n","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Login.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/pages/Homepage.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/LoginModal/LoginModal.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/SignupModal/SignupModal.jsx",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/utils/GlobalContext.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/index.js",[],"/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Calendar/Calendar.jsx",["65","66","67"],"import React, { Component } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport axios from \"axios\";\nimport EventModal from \"../EventModal/EventModal.jsx\"\nimport TripModal from \"../TripModal/TripModal.jsx\"\n\n// import \"./App.css\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst localizer = momentLocalizer(moment);\nconst DnDCalendar = withDragAndDrop(Calendar);\nconst propTypes = {}\n\nclass TravelCalendar extends Component {\n    state = {\n        events: [],\n        displayDragItemInCell: true\n    };\n\n    componentDidMount = () => {\n        axios.get(\"/api/traveler/trips\")\n            .then((res) => {\n                const tripArr = res.data.data;\n\n                tripArr.forEach(trip => {\n                    console.log(trip)\n                    const startDateYear = trip.startDate.slice(0, 4);\n                    const startDateMonth = trip.startDate.slice(5, 7);\n                    const startDateDay = trip.startDate.slice(8, 10);\n                    const startDateHour = trip.startDate.slice(11, 13);\n                    const startDateMinute = trip.startDate.slice(14, 16);\n                    \n                    const endDateYear = trip.endDate.slice(0, 4);\n                    const endDateMonth = trip.endDate.slice(5, 7);\n                    const endDateDay = trip.endDate.slice(8, 10);\n                    const endDateHour = trip.endDate.slice(11, 13);\n                    const endDateMinute = trip.endDate.slice(14, 16);\n\n                    this.setState({\n                        events: [\n                            ...this.state.events,\n                            {\n                                type: \"trip\",\n                                title: trip.location,\n                                start: new Date(startDateYear, startDateMonth, startDateDay, startDateHour, startDateMinute),\n                                end: new Date(endDateYear, endDateMonth, endDateDay, endDateHour, endDateMinute)\n                            }\n                        ]\n                    })\n                    console.log(\"state.events: \", this.state.events)\n                })\n            })\n            .catch(function (err) {\n                console.log(err);\n            });\n\n        \n    }\n\n    handleSelect = ({ start, end }) => {\n        const title = window.prompt('New Event name')\n        if (title)\n            this.setState({\n                events: [\n                    ...this.state.events,\n                    {\n                        start,\n                        end,\n                        title,\n                    },\n                ],\n            })\n    }\n\n    onEventResize = (data) => {\n        const { start, end } = data;\n\n        this.setState((state) => {\n            state.events[0].start = start;\n            state.events[0].end = end;\n            return { events: [...state.events] };\n        });\n    };\n\n    onEventDrop = (data) => {\n        console.log(data);\n    };\n\n\n\n    // Drag and Drop Code:\n    handleDragStart = event => {\n        this.setState({ draggedEvent: event })\n    }\n\n    dragFromOutsideItem = () => {\n        return this.state.draggedEvent\n    }\n\n    onDropFromOutside = ({ start, end, allDay }) => {\n        const { draggedEvent } = this.state\n\n        const event = {\n            id: draggedEvent.id,\n            title: draggedEvent.title,\n            start,\n            end,\n            allDay: allDay,\n        }\n\n        this.setState({ draggedEvent: null })\n        this.moveEvent({ event, start, end })\n    }\n\n    moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\n        const { events } = this.state\n\n        let allDay = event.allDay\n\n        if (!event.allDay && droppedOnAllDaySlot) {\n            allDay = true\n        } else if (event.allDay && !droppedOnAllDaySlot) {\n            allDay = false\n        }\n\n        const nextEvents = events.map(existingEvent => {\n            return existingEvent.id == event.id\n                ? { ...existingEvent, start, end }\n                : existingEvent\n        })\n\n        this.setState({\n            events: nextEvents,\n        })\n    }\n\n    resizeEvent = ({ event, start, end }) => {\n        const { events } = this.state\n\n        const nextEvents = events.map(existingEvent => {\n            return existingEvent.id == event.id\n                ? { ...existingEvent, start, end }\n                : existingEvent\n        })\n\n        this.setState({\n            events: nextEvents,\n        })\n    }\n\n    handleEventEditModal = (event) => {\n        console.log(\"hit event: \", event)\n        return (\n            <EventModal />,\n            <TripModal />\n        )\n    }\n\n    eventStyleGetter = (event, start, end, isSelected) => {\n        console.log(\"eeeeeeevent: \", event);\n        var style = {\n            backgroundColor: \"orange\",\n            borderRadius: '10px',\n            opacity: 0.8,\n            color: 'black',\n            border: '0px',\n            display: 'block'\n        };\n        return {\n            style: style\n        };\n    }\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <DnDCalendar\n                    data-toggle=\"eventModal\"\n                    selectable\n                    defaultDate={moment().toDate()}\n                    defaultView=\"month\"\n                    events={this.state.events}\n                    localizer={localizer}\n                    scrollToTime={new Date(1970, 1, 1, 6)}\n                    onEventDrop={this.moveEvent}\n                    onEventResize={this.resizeEvent}\n                    dragFromOutsideItem={\n                        this.state.displayDragItemInCell ? this.dragFromOutsideItem : null\n                    }\n                    onDropFromOutside={this.onDropFromOutside}\n                    handleDragStart={this.handleDragStart}\n                    resizable\n                    onSelectSlot={this.handleSelect}\n                    style={{ height: \"75vh\" }}\n                    popup\n                    eventPropGetter={this.eventStyleGetter}\n                    // dayPropGetter={this.eventStyleGetter}\n                />\n            </div>\n        );\n    }\n}\n\nTravelCalendar.propTypes = propTypes\n\nexport default TravelCalendar;","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripMenu/TripMenu.jsx",["68","69","70","71","72","73","74","75","76","77","78","79"],"import React, { Component } from 'react';\nimport './tripMenu.css'\nimport EventModal from \"../EventModal/EventModal.jsx\"\nimport TripModal from \"../TripModal/TripModal.jsx\"\nimport $ from \"jquery\";\n\nclass TripMenu extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventType: '',\n        };\n\n    }\n\n    componentDidMount() {\n        $(document).foundation();\n    }\n\n    render() {\n        return (\n            <>\n                <EventModal/>\n                <TripModal/>\n                {/* <div class=\"primary button-group\">\n                    <a class=\"trip-button button\">Add Trip</a>\n                    <a class=\"event-button button\" onClick={<EventModal/>}>Add Event</a>\n                </div> */}\n                <div class=\"callout\">\n                    <ul class=\"accordion\" data-accordion>\n                        <li class=\"accordion-item is-active\" data-accordion-item>\n                            <a href=\"#\" class=\"accordion-title\">Next Trip</a>\n                            <div class=\"accordion-content\" data-tab-content>\n                                <p><a href=\"#\">Flights</a></p>\n                                <p><a href=\"#\">Lodging</a></p>\n                                <p><a href=\"#\">Activities</a></p>\n                            </div>\n                        </li>\n                        <li class=\"accordion-item\" data-accordion-item>\n                            <a href=\"#\" class=\"accordion-title\">Trip B</a>\n                            <div class=\"accordion-content\" data-tab-content>\n                                <p><a href=\"#\">Flights</a></p>\n                                <p><a href=\"#\">Lodging</a></p>\n                                <p><a href=\"#\">Activities</a></p>\n                            </div>\n                        </li>\n                        <li class=\"accordion-item\" data-accordion-item>\n                            <a href=\"#\" class=\"accordion-title\">Trip C</a>\n                            <div class=\"accordion-content\" data-tab-content>\n                                <p><a href=\"#\">Flights</a></p>\n                                <p><a href=\"#\">Lodging</a></p>\n                                <p><a href=\"#\">Activities</a></p>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </>\n        );\n    }\n};\n\nexport default TripMenu;","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/EventModal/EventModal.jsx",["80"],"import React, { Component } from 'react';\nimport Modal from \"react-modal\";\n\nclass EventModal extends Component {\n    constructor() {\n        super();\n        this.state = {\n            showModal: false,\n            eventType: \"\"\n        };\n\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        },\n        overlay: { zIndex: 1000 }\n    };\n\n    handleOpenModal() {\n        this.setState({ showModal: true });\n    }\n\n    handleCloseModal() {\n        this.setState({ showModal: false });\n    }\n\n    handleChange(event) {\n        console.log(event)\n        this.setState({ eventType: event.target.value });\n        console.log(this.state.eventType)\n    }\n\n    handleSubmit(event) {\n        console.log('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div>\n                <button class=\"event-button button\" onClick={this.handleOpenModal}>Add Event</button>\n                <Modal\n                    isOpen={this.state.showModal}\n                    contentLabel=\"onRequestClose Example\"\n                    onRequestClose={this.handleCloseModal}\n                    shouldCloseOnOverlayClick={false}\n                    style={this.customStyles}\n                    ariaHideApp={false}\n                >\n                    <button onClick={this.handleCloseModal}>X</button>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Type of Event:\n                        <select value={this.state.eventType} onChange={this.handleChange}>\n                                <option value=\"\">Select event type...</option>\n                                <option value=\"flight\">Flight</option>\n                                <option value=\"lodging\">Lodging</option>\n                                <option value=\"activity\">Activity</option>\n                            </select>\n                        </label>\n                        {this.state.eventType === \"flight\" &&\n                            <div>\n                                <label>\n                                    Flight Number:\n                                <input type=\"text\" name=\"flightNum\" />\n                                </label>\n                                <label>\n                                    Departure Time:\n                                <input type=\"text\" name=\"departureTime\" />\n                                </label>\n                                <label>\n                                    Arrival Time:\n                                <input type=\"text\" name=\"arrivalTime\" />\n                                </label>\n                                <label>\n                                    Additional Info:\n                                <input type=\"text\" name=\"additionalInfoFlight\" />\n                                </label>\n                            </div>\n                        }\n                        {this.state.eventType === \"lodging\" &&\n                            <div>\n                                <label>\n                                    Lodging Name:\n                            <input type=\"text\" name=\"lodgingName\" />\n                                </label>\n                                <label>\n                                    Check-in Date:\n                            <input type=\"text\" name=\"checkInDate\" />\n                                </label>\n                                <label>\n                                    Check-out Date:\n                            <input type=\"text\" name=\"checkOutDate\" />\n                                </label>\n                                <label>\n                                    Additional Info:\n                            <input type=\"text\" name=\"additionalInfoLodge\" />\n                                </label>\n                            </div>\n                        }\n                        {this.state.eventType === \"activity\" &&\n                            <div>\n                                <label>\n                                    Activity Name:\n                            <input type=\"text\" name=\"activityName\" />\n                                </label>\n                                <label>\n                                    Date:\n                            <input type=\"text\" name=\"activityDate\" />\n                                </label>\n                                <label>\n                                    Start Time:\n                            <input type=\"text\" name=\"activityStart\" />\n                                </label>\n                                <label>\n                                    End Time:\n                            <input type=\"text\" name=\"activityEnd\" />\n                                </label>\n                                <label>\n                                    Additional Info:\n                            <input type=\"text\" name=\"additionalInfoActivity\" />\n                                </label>\n                            </div>\n                        }\n                        <input type=\"submit\" value=\"Submit\" />\n                    </form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst props = {};\n\nexport default EventModal;","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/TripModal/TripModal.jsx",["81"],"import React, { Component } from 'react';\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport { TimePicker } from 'antd';\nimport moment from 'moment';\nimport 'antd/dist/antd.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass EventModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            // eventType: \"\",\n            location: \"\",\n            departureDate: \"\",\n            departureTime: \"\",\n            // returnDate: \"\",\n            // returnTime: \"\",\n        };\n\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        },\n        overlay: { zIndex: 1000 }\n    };\n\n    handleOpenModal() {\n        this.setState({ showModal: true });\n    }\n\n    handleCloseModal() {\n        this.setState({ showModal: false });\n    }\n\n    handleChange(event) {\n        console.log(event)\n        this.setState({ eventType: event.target.value });\n        console.log(this.state.eventType)\n    }\n\n    handleSubmit(event) {\n        console.log(this.state.location, this.state.departureDate, this.state.returnDate);\n        event.preventDefault();\n        var tripData = {\n            location: this.state.location,\n            startDate: this.state.departureDate,\n            endDate: this.state.returnDate,\n        };\n\n        // if (!tripData.email || !tripData.password) {\n        //     return;\n        // }\n\n        this.logTrip(tripData.location, tripData.startDate, tripData.endDate);\n        this.handleCloseModal();\n    };\n\n    logTrip = (location, startDate, endDate) => {\n        axios.post(\"/api/traveler/add-trip\", {\n            user: localStorage.getItem(\"user\"),\n            location: location,\n            startDate: startDate,\n            endDate: endDate\n        })\n            .then(function () {\n                console.log(\"success\");\n                // window.location.replace(\"/\");\n                // If there's an error, log the error\n            })\n            .catch(function (err) {\n                console.log(err);\n            });\n    };\n\n    render() {\n        return (\n            <div>\n                <button class=\"trip-button button\" onClick={this.handleOpenModal}>Add Trip</button>\n                <Modal\n                    isOpen={this.state.showModal}\n                    contentLabel=\"onRequestClose Example\"\n                    onRequestClose={this.handleCloseModal}\n                    shouldCloseOnOverlayClick={false}\n                    style={this.customStyles}\n                    ariaHideApp={false}\n                >\n                    <button onClick={this.handleCloseModal}>X</button>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Where are you going?\n                            <input onChange={e => this.setState({ location: e.target.value })} type=\"text\" name=\"tripLocation\" />\n                        </label>\n                        <div>\n                            Departure:\n                            <DatePicker\n                                selected={this.state.departureDate}\n                                onChange={date => this.setState({ departureDate: date })}\n                                shouldCloseOnSelect=\"true\"\n                            />\n                        </div>\n                        <div>\n                            Return:\n                            <DatePicker\n                                selected={this.state.returnDate}\n                                onChange={date => this.setState({ returnDate: date })}\n                                shouldCloseOnSelect=\"true\"\n                            />\n                        </div>\n                        {/* <label>\n                            Are you flying or driving?\n                        <select value={this.state.eventType} onChange={this.handleChange}>\n                                <option value=\"\">Select event type...</option>\n                                <option value=\"flight\">Flying</option>\n                                <option value=\"drive\">Driving</option>\n                            </select>\n                        </label> */}\n                        {this.state.eventType === \"flight\" &&\n                            <div>\n                                <label>\n                                    Flight Number:\n                                <input type=\"text\" name=\"flightNum\" />\n                                </label>\n                                <div>\n                                    Departure:\n                                    <DatePicker\n                                        selected={this.state.departureDate}\n                                        onChange={date => this.setState({ departureDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ departureTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n                                <div>\n                                    Return:\n                                    <DatePicker\n                                        selected={this.state.returnDate}\n                                        onChange={date => this.setState({ returnDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ returnTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n                                <label>\n                                    Additional Info:\n                                <input type=\"text\" name=\"additionalInfoFlight\" />\n                                </label>\n                            </div>\n                        }\n                        {this.state.eventType === \"drive\" &&\n                            <div>\n                                <div>\n                                    Departure:\n                                    <DatePicker\n                                        selected={this.state.departureDate}\n                                        onChange={date => this.setState({ departureDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ departureTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n                                <div>\n                                    Return:\n                                    <DatePicker\n                                        selected={this.state.returnDate}\n                                        onChange={date => this.setState({ returnDate: date })}\n                                        shouldCloseOnSelect=\"true\"\n                                    />\n                                    <TimePicker\n                                        use12Hours\n                                        defaultValue={moment('12:08', 'HH:mm')}\n                                        onChange={time => this.setState({ returnTime: time })}\n                                        format=\"h:mm a\"\n                                    />\n                                </div>\n\n                            </div>\n                        }\n                        <input type=\"submit\" value=\"Submit\" />\n                    </form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst props = {};\n\nexport default EventModal;","/Users/tdmoore004/Documents/School/code/projects/project-3/traveler/client/src/components/Navbar/Navbar.jsx",["82"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGlobalContext } from \"../../utils/GlobalContext.js\";\nimport './Navbar.css';\n\nconst Navbar = () => {\n\n  const [userContext, setUserContext] = useGlobalContext();\n\n  const logout = () => {\n    setUserContext({ user: \"\", isAuth: false })\n  }\n\n  return (\n    <nav className=\"Navbar\">\n      <div className=\"Navbar-brand\">\n        <span>Traveler</span>\n      </div>\n\n      <ul className=\"Navbar-links\">\n        <li className=\"Navbar-link\">\n          <Link to=\"/\">\n            Homepage\n          </Link>\n        </li>\n\n        <ul className=\"Navbar-Links dropdown menu\" data-dropdown-menu>\n          <li>\n            <button className=\"Navbar-links\" onClick={logout}>Logout</button>\n          </li>\n        </ul>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":26},{"ruleId":"87","severity":1,"message":"91","line":1,"column":39,"nodeType":"89","messageId":"90","endLine":1,"endColumn":47},{"ruleId":"87","severity":1,"message":"92","line":126,"column":13,"nodeType":"89","messageId":"90","endLine":126,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":130,"column":37,"nodeType":"95","messageId":"96","endLine":130,"endColumn":39},{"ruleId":"93","severity":1,"message":"94","line":144,"column":37,"nodeType":"95","messageId":"96","endLine":144,"endColumn":39},{"ruleId":"97","severity":1,"message":"98","line":33,"column":29,"nodeType":"99","endLine":33,"endColumn":65},{"ruleId":"97","severity":1,"message":"98","line":35,"column":36,"nodeType":"99","endLine":35,"endColumn":48},{"ruleId":"97","severity":1,"message":"98","line":36,"column":36,"nodeType":"99","endLine":36,"endColumn":48},{"ruleId":"97","severity":1,"message":"98","line":37,"column":36,"nodeType":"99","endLine":37,"endColumn":48},{"ruleId":"97","severity":1,"message":"98","line":41,"column":29,"nodeType":"99","endLine":41,"endColumn":65},{"ruleId":"97","severity":1,"message":"98","line":43,"column":36,"nodeType":"99","endLine":43,"endColumn":48},{"ruleId":"97","severity":1,"message":"98","line":44,"column":36,"nodeType":"99","endLine":44,"endColumn":48},{"ruleId":"97","severity":1,"message":"98","line":45,"column":36,"nodeType":"99","endLine":45,"endColumn":48},{"ruleId":"97","severity":1,"message":"98","line":49,"column":29,"nodeType":"99","endLine":49,"endColumn":65},{"ruleId":"97","severity":1,"message":"98","line":51,"column":36,"nodeType":"99","endLine":51,"endColumn":48},{"ruleId":"97","severity":1,"message":"98","line":52,"column":36,"nodeType":"99","endLine":52,"endColumn":48},{"ruleId":"97","severity":1,"message":"98","line":53,"column":36,"nodeType":"99","endLine":53,"endColumn":48},{"ruleId":"87","severity":1,"message":"100","line":144,"column":7,"nodeType":"89","messageId":"90","endLine":144,"endColumn":12},{"ruleId":"87","severity":1,"message":"100","line":212,"column":7,"nodeType":"89","messageId":"90","endLine":212,"endColumn":12},{"ruleId":"87","severity":1,"message":"101","line":8,"column":10,"nodeType":"89","messageId":"90","endLine":8,"endColumn":21},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'allDay' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'props' is assigned a value but never used.","'userContext' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]